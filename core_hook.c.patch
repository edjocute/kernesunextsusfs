--- a/kernel/core_hook.c	2025-02-22 21:34:57.000000000 +0330
+++ b/kernel/core_hook.c	2025-02-22 21:41:14.795186599 +0330
@@ -961,17 +961,44 @@
 #ifdef CONFIG_KSU_SUSFS_TRY_UMOUNT
 void susfs_try_umount_all(uid_t uid) {
 	susfs_try_umount(uid);
-	/* For Legacy KSU only */
-	ksu_try_umount("/system", true, 0, uid);
-	ksu_try_umount("/system_ext", true, 0, uid);
-	ksu_try_umount("/vendor", true, 0, uid);
-	ksu_try_umount("/product", true, 0, uid);
-	ksu_try_umount("/odm", true, 0, uid);
-	// - For '/data/adb/modules' we pass 'false' here because it is a loop device that we can't determine whether 
-	//   its dev_name is KSU or not, and it is safe to just umount it if it is really a mountpoint
-	ksu_try_umount("/data/adb/modules", false, MNT_DETACH, uid);
-	/* For both Legacy KSU and Magic Mount KSU */
-	ksu_try_umount("/debug_ramdisk", true, MNT_DETACH, uid);
+	// fixme: use `collect_mounts` and `iterate_mount` to iterate all mountpoint and
+	// filter the mountpoint whose target is `/data/adb`
+	ksu_try_umount("/system", true, 0 ,uid);
+	ksu_try_umount("/system_ext", true, 0 ,uid);
+	ksu_try_umount("/vendor", true, 0 ,uid);
+	ksu_try_umount("/product", true, 0 ,uid);
+	ksu_try_umount("/data/adb/modules", false, MNT_DETACH ,uid);
+
+	// try umount ksu temp path
+	ksu_try_umount("/debug_ramdisk", false, MNT_DETACH ,uid);
+	ksu_try_umount("/sbin", false, MNT_DETACH ,uid);
+	
+	// try umount hosts file
+	ksu_try_umount("/system/etc/hosts", false, MNT_DETACH ,uid);
+
+	// try umount lsposed dex2oat bins
+	ksu_try_umount("/apex/com.android.art/bin/dex2oat64", false, MNT_DETACH ,uid);
+	ksu_try_umount("/apex/com.android.art/bin/dex2oat32", false, MNT_DETACH ,uid);
+
+	// try umount pixelify gphotos spoof configs
+	ksu_try_umount("/system/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2016_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2017.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2018.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019_midyear.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020_midyear.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021_midyear.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022_midyear.xml", false, MNT_DETACH ,uid);
+	ksu_try_umount("/product/etc/sysconfig/pixelify_experience.xml", false, MNT_DETACH ,uid);
 }
 #endif
 
@@ -1051,46 +1078,51 @@
 	pr_info("handle umount for uid: %d, pid: %d\n", new_uid.val,
 		current->pid);
 #endif
+#ifdef CONFIG_KSU_SUSFS_TRY_UMOUNT
+	// susfs come first, and lastly umount by ksu, make sure umount in reversed order
+	susfs_try_umount_all(new_uid.val);
+#else
+
 
 	// fixme: use `collect_mounts` and `iterate_mount` to iterate all mountpoint and
 	// filter the mountpoint whose target is `/data/adb`
-	try_umount("/system", true, 0);
-	try_umount("/system_ext", true, 0);
-	try_umount("/vendor", true, 0);
-	try_umount("/product", true, 0);
-	try_umount("/data/adb/modules", false, MNT_DETACH);
+	ksu_try_umount("/system", true, 0);
+	ksu_try_umount("/system_ext", true, 0);
+	ksu_try_umount("/vendor", true, 0);
+	ksu_try_umount("/product", true, 0);
+	ksu_try_umount("/data/adb/modules", false, MNT_DETACH);
 
 	// try umount ksu temp path
-	try_umount("/debug_ramdisk", false, MNT_DETACH);
-	try_umount("/sbin", false, MNT_DETACH);
+	ksu_try_umount("/debug_ramdisk", false, MNT_DETACH);
+	ksu_try_umount("/sbin", false, MNT_DETACH);
 	
 	// try umount hosts file
-	try_umount("/system/etc/hosts", false, MNT_DETACH);
+	ksu_try_umount("/system/etc/hosts", false, MNT_DETACH);
 
 	// try umount lsposed dex2oat bins
-	try_umount("/apex/com.android.art/bin/dex2oat64", false, MNT_DETACH);
-	try_umount("/apex/com.android.art/bin/dex2oat32", false, MNT_DETACH);
+	ksu_try_umount("/apex/com.android.art/bin/dex2oat64", false, MNT_DETACH);
+	ksu_try_umount("/apex/com.android.art/bin/dex2oat32", false, MNT_DETACH);
 
 	// try umount pixelify gphotos spoof configs
-	try_umount("/system/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
-	try_umount("/system/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
-	try_umount("/system/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_2016_exclusive.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2017.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2018.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2019.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2019_midyear.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2020.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2020_midyear.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2021.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2021_midyear.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2022.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixel_experience_2022_midyear.xml", false, MNT_DETACH);
-	try_umount("/product/etc/sysconfig/pixelify_experience.xml", false, MNT_DETACH);
-
+	ksu_try_umount("/system/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/system/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2016_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2017_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2018_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_2019_exclusive.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2017.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2018.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2019_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2020_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2021_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixel_experience_2022_midyear.xml", false, MNT_DETACH);
+	ksu_try_umount("/product/etc/sysconfig/pixelify_experience.xml", false, MNT_DETACH);
+#endif
 	return 0;
 }
 
