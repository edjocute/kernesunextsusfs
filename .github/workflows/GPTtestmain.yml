name: Build and Release Kernel submodule testing

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive
  ROOT_DIR_PREFIX: "OP12-A15"
  BRANCH: "android14-6.1"

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # --- Checkout and prepare the environment ---
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important for submodules

      - name: Free Disk Space
        run: |
          set -euxo pipefail
          sudo apt-get update -qq
          sudo apt-get install -qq curl
          curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      - name: Setup Build Environment
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            python3-pip \
            curl \
            git \
            zip \
            unzip \
            gcc \
            g++ \
            make \
            ninja-build \
            file \
            bc \
            bison \
            flex \
            libssl-dev \
            libelf-dev \
            wget \
            build-essential \
            python3-dev \
            python3-setuptools \
            rsync \
            ccache

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ hashFiles('**/CMakeLists.txt') }}

      - name: Install Latest Pahole
        run: |
          set -euxo pipefail
          sudo apt-get remove --purge -y dwarves
          sudo apt-get install -y git build-essential libdw-dev zlib1g-dev
          git clone --recurse-submodules https://git.kernel.org/pub/scm/devel/pahole/pahole.git
          cd pahole
          cmake .
          sudo make install

      - name: Setup Python and Repo Tool
        run: |
          set -euxo pipefail
          # Upgrade pip and install Python dependencies
          python3 -m pip install --upgrade pip
          pip3 install gitpython xmltodict
          # Install the repo tool into $HOME/bin
          mkdir -p "$HOME/bin"
          wget -O "$HOME/bin/repo" https://storage.googleapis.com/git-repo-downloads/repo
          chmod a+x "$HOME/bin/repo"
          # Add $HOME/bin to PATH via GitHub Actions
          echo "$HOME/bin" >> $GITHUB_PATH
          # Configure git (for automated commits, if needed)
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          # Verify installation
          #repo --version

      - name: Configure Build Directory
        id: build_dir
        run: |
          set -euxo pipefail
          ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          echo "ROOT_DIR=${ROOT_DIR}" >> $GITHUB_ENV
          mkdir -p "builds/${ROOT_DIR}"
          echo "Build directory set to builds/${ROOT_DIR}"

      - name: Clone Required Repositories
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          set -euxo pipefail
          # Clone AnyKernel3 with its submodules
          git clone --recursive https://github.com/TheWildJames/AnyKernel3.git -b "$BRANCH"
          # Clone SUSFS-related repositories and patches
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/WildPlusKernel/kernel_patches.git

      - name: Setup Kernel Source
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          set -euxo pipefail
          mkdir -p kernel_platform/oneplus12_v
          cd kernel_platform/oneplus12_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus12_v.xml --depth=1
          repo sync -c -j"$(nproc)" --force-sync --no-clone-bundle --no-tags
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Setup KernelSU (Submodule Integration)
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
          # Run the KernelSU setup script from the remote source
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          # Initialize and update submodules
          git submodule update --init --recursive
          cd KernelSU-Next/kernel
          # Determine and export the KernelSU version from git tags
          KSU_VERSION=$(git describe --tags --abbrev=0)
          echo "KSUVER=${KSU_VERSION}" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=16/DKSU_VERSION=${KSU_VERSION}/" Makefile

      - name: Setup SUSFS
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
          # Create required directories
          mkdir -p ./common/fs ./common/include/linux
          # Copy SUSFS source files
          cp ../../../susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp ../../../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/
          # Copy patch files from SUSFS and KernelSU patches repositories
          cp ../../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp ../../../kernel_patches/69_hide_stuff.patch ./common/
          cp ../../../kernel_patches/KernelSU-Next-Implement-SUSFS-v1.5.5-Universal.patch ./KernelSU-Next/
          # Apply the SUSFS patch in KernelSU-Next
          cd KernelSU-Next
          if ! patch -p1 --forward < KernelSU-Next-Implement-SUSFS-v1.5.5-Universal.patch; then
            echo "Warning: KernelSU SUSFS patch may have been already applied or failed. Continuing..."
          fi
          cd ../common
          if ! patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch; then
            echo "Warning: SUSFS patch may have been already applied. Continuing..."
          fi
          if ! patch -p1 -F 3 < 69_hide_stuff.patch; then
            echo "Warning: 69_hide_stuff patch may have been already applied. Continuing..."
          fi
          # Remove a redundant object file reference from the Makefile
          sed -i '/obj-$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          # Optionally commit changes if desired (failure here wonâ€™t block the build)
          git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true
          cd ..
          git add -A && git commit -m "BUILD Kernel (SUSFS setup)" || true
          git rm --cached KernelSU-Next || true

      - name: Configure Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
           # Add SUSFS configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
       
          
          # Remove defconfig check
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      # --- Build Kernel ---
      - name: Build Kernel
        working-directory: builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform
        run: |
          set -euxo pipefail
          mkdir -p out
          export PATH="/usr/lib/ccache:$PATH"
          ./build_with_bazel.py \
            -t pineapple \
            gki \
            --jobs="$(nproc --all)" \
            --verbose_failures \
            --config=stamp \
            --user_kmi_symbol_lists=//msm-kernel:android/abi_gki_aarch64_qcom \
            --ignore_missing_projects \
            -o "$(pwd)/out"

      # --- Package Build Artifacts ---
      - name: Create ZIP Package
        working-directory: builds/${{ env.ROOT_DIR }}
        run: |
          set -euxo pipefail
          # Make sure the AnyKernel3 directory exists
          mkdir -p AnyKernel3
          #Create image file in the directory, if it doesn't exist.
          touch AnyKernel3/Image

          cp kernel_platform/oneplus12_v/kernel_platform/out/dist/Image AnyKernel3/Image || { echo "Error copying Image file"; exit 1; }
          cd AnyKernel3
          ZIP_NAME="Cabage-OP12-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          echo "Creating zip file $ZIP_NAME..."
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"
          echo "zip_name=$ZIP_NAME" >> $GITHUB_ENV

      - name: Set current timestamp
        id: timestamp
        run: echo "CURRENT_TIMESTAMP=$(date -u +'%Y.%m.%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # You must define GITHUB_TOKEN secret
        with:
          files: builds/${{ env.ROOT_DIR }}/${{ env.zip_name }}
          tag_name: ${{ env.KSUVER }}-${{ env.ROOT_DIR_PREFIX }} # or just ${{ env.KSUVER }} if you will put the device/build info into release name.
          name: Release ${{ env.ROOT_DIR_PREFIX }} ${{ env.zip_name }} #optional: Release name
          body: |
             Release for ${{ env.ROOT_DIR_PREFIX }} based on branch ${{ env.BRANCH }}
             KSU Version: ${{ env.KSUVER }}
             Timestamp: ${{ env.CURRENT_TIMESTAMP }}
      # --- Upload Build Logs for Diagnostics ---
      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-logs
          path: |
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/out/*.log
            builds/${{ env.ROOT_DIR }}/kernel_platform/oneplus12_v/kernel_platform/**/*.rej
          retention-days: 5
          if-no-files-found: error # or 'warn' or 'ignore'
